module(
    name = "media_search",
    repo_name = "com_google_cloud_media_search",
)

bazel_dep(name = "rules_go", version = "0.50.1", repo_name = "io_bazel_rules_go")
bazel_dep(name = "gazelle", version = "0.37.0", repo_name = "bazel_gazelle")
bazel_dep(name = "aspect_bazel_lib", version = "2.9.3")
bazel_dep(name = "aspect_rules_lint", version = "1.0.3")
bazel_dep(name = "aspect_rules_jest", version = "0.22.0")
bazel_dep(name = "aspect_rules_js", version = "2.1.0")
bazel_dep(name = "aspect_rules_ts", version = "3.3.1")
bazel_dep(name = "aspect_rules_swc", version = "2.0.1")
bazel_dep(name = "aspect_rules_rollup", version = "2.0.0")
bazel_dep(name = "rules_nodejs", version = "6.3.1")
bazel_dep(name = "platforms", version = "0.0.10")
bazel_dep(name = "rules_multirun", version = "0.9.0")

################################################################################
# Go Lang Targets
################################################################################

go_sdk = use_extension("@io_bazel_rules_go//go:extensions.bzl", "go_sdk")

# Download an SDK for the host OS & architecture as well as common remote execution platforms.
go_sdk.download(version = "1.23.1")

go_deps = use_extension("@bazel_gazelle//:extensions.bzl", "go_deps")
go_deps.from_file(go_mod = "//:go.mod")
use_repo(
    go_deps,
    "com_github_burntsushi_toml",
    "com_github_gin_contrib_cors",
    "com_github_gin_gonic_gin",
    "com_github_google_generative_ai_go",
    "com_github_google_uuid",
    "com_github_googlecloudplatform_opentelemetry_operations_go_exporter_metric",
    "com_github_googlecloudplatform_opentelemetry_operations_go_exporter_trace",
    "com_github_stretchr_testify",
    "com_github_zeebo_assert",
    "com_google_cloud_go_bigquery",
    "com_google_cloud_go_pubsub",
    "com_google_cloud_go_storage",
    "io_opentelemetry_go_contrib_bridges_otelslog",
    "io_opentelemetry_go_contrib_detectors_gcp",
    "io_opentelemetry_go_contrib_instrumentation_github_com_gin_gonic_gin_otelgin",
    "io_opentelemetry_go_contrib_propagators_autoprop",
    "io_opentelemetry_go_otel",
    "io_opentelemetry_go_otel_metric",
    "io_opentelemetry_go_otel_sdk",
    "io_opentelemetry_go_otel_sdk_metric",
    "io_opentelemetry_go_otel_trace",
    "org_golang_google_api",
    "org_golang_x_time",
)

################################################################################
# NodeJS Targets
################################################################################

node_dev = use_extension("@rules_nodejs//nodejs:extensions.bzl", "node", dev_dependency = True)
use_repo(node_dev, "nodejs_toolchains")
node_dev.toolchain(
    name = "nodejs",
    node_version = "20.15.0",
)

pnpm = use_extension("@aspect_rules_js//npm:extensions.bzl", "pnpm")
pnpm.pnpm(
    name = "pnpm",
    pnpm_version = "8.6.7",
    pnpm_version_integrity = "sha512-vRIWpD/L4phf9Bk2o/O2TDR8fFoJnpYrp2TKqTIZF/qZ2/rgL3qKXzHofHgbXsinwMoSEigz28sqk3pQ+yMEQQ==",
)
use_repo(pnpm, "pnpm", "pnpm__links")

npm = use_extension(
    "@aspect_rules_js//npm:extensions.bzl",
    "npm",
    dev_dependency = True,
)
npm.npm_translate_lock(
    name = "npm",
    data = [
        "//web/apps/media-search:package.json",
    ],
    npmrc = "//web/apps/media-search:.npmrc",
    pnpm_lock = "//web/apps/media-search:pnpm-lock.yaml",
    update_pnpm_lock = True,
    verify_node_modules_ignored = "//web/apps/media-search:.bazelignore",
)
use_repo(npm, "npm")

rules_ts_ext = use_extension(
    "@aspect_rules_ts//ts:extensions.bzl",
    "ext",
    dev_dependency = True,
)
rules_ts_ext.deps()
use_repo(rules_ts_ext, "npm_typescript")
